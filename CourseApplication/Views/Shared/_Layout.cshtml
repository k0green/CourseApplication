@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.Extensions.Options
@using Microsoft.AspNetCore.Localization
@inject IViewLocalizer Localizer
@inject IHttpContextAccessor accessor
<!DOCTYPE html>
<html >
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - CourseApplication</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/CourseApplication.styles.css" asp-append-version="true" />
   

    @{
        
        string? theme = accessor.HttpContext.Request.Cookies["theme"];
        if(theme==null || theme=="Normal")
        {
            <link rel="stylesheet" href="~/css/lightMode.css" asp-append-version="true" />
        }
        else if(theme=="night")
        {
            <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
        }
    }

</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">CourseApplication</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Index">@Localizer["MainPage"].Value</a>
                        </li>
                        @if (User.IsInRole("admin"))
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Users" asp-action="Index">@Localizer["Users"].Value</a>
                            </li>
                        }
                        @if (User.IsInRole("user"))
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Users" asp-action="PersonalArea">@Localizer["PersonalArea"].Value</a>
                            </li>
                        }
                        
                        @inject IOptions<RequestLocalizationOptions> LocalizationOptions
                        
                        @{
                            var requestCulture = Context.Features.Get<IRequestCultureFeature>();
                        
                            var cultureItems = LocalizationOptions.Value.SupportedUICultures
                                .Select(c => new SelectListItem { Value = c.Name, Text = c.Name })
                                .ToList();
                        
                            var returnUrl = string.IsNullOrEmpty(Context.Request.Path) 
                                ? "~/" 
                                : $"~{Context.Request.Path.Value}{Context.Request.QueryString}";
                        }
                        
                    <div>
                        <form asp-controller="Culture" asp-action="SetCulture" asp-route-returnUrl="@returnUrl" 
                              class="form-horizontal nav-link text-dark">
                            <select name="culture" 
                                    onchange="this.form.submit();" 
                                    asp-for="@requestCulture.RequestCulture.UICulture.Name" 
                                    asp-items="cultureItems">
                            </select>
                        </form>
                    </div>
                    <div>
                        @if (accessor.HttpContext.Request.Cookies["theme"] == null || accessor.HttpContext.Request.Cookies["theme"] == "Normal")
                            {
                                <div>
                                    <button class="btn btn-dark" id="night"><i class="bi bi-moon-fill"></i>&nbsp;</button>
                                </div>
                            }
                        @if (accessor.HttpContext.Request.Cookies["theme"] == "night")
                            {
                                <div>
                                    <button class="btn btn-light" id="Normal"><i class="bi bi-brightness-high-fill"></i>&nbsp;</button>
                                </div>
                            }
                              
                        </div>

                    </ul>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>
<div class="container">
    <main role="main" class="pb-3">
        @RenderBody()
    </main>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>


<script>
    $("#night").on("click", function () {
        var id = $(this).attr("id");
        $.ajax({
            url: "/Home/SetTheme",
            method: 'post',
            data: { theme: 'night' },
        });
        update();
    });

function update(){
	setTimeout(function(){
		location.reload();
	}, 300);
}

    $("#Normal").on("click", function () {
        var id = $(this).attr("id");
        $.ajax({
            url: "/Home/SetTheme",
            method: 'post',
            data: { theme: 'Normal' },
        });
        update();
    });

</script>